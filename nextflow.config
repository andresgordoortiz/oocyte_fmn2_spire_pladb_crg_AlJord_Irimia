profiles {
    slurm {
        process {
            executor = 'slurm'
            queue = 'genoa64'

            // Adding processes from main.nf with their specific resource requirements
            withName: download_reads {
                memory = '15 GB'
                time = '15m'
                cpus = 2
            }

            withName: verify_files {
                memory = '10 GB'
                time = '10m'
                cpus = 2

            }

            withName: concatenate_reads {
                memory = '10 GB'
                time = '15m'
                cpus = 1
            }

            withName: run_fastqc {
                memory = '5 GB'
                time = '60m'
                cpus = 8
                container = 'docker://biocontainers/fastqc:v0.11.9_cv8'
            }

            withName: align_reads {
                memory = '50 GB'
                time = '120m'
                cpus = 8
                container = 'docker://andresgordoortiz/vast-tools:latest'
                singularity.runOptions = { "--bind ${params.vastdb_path}:/usr/local/vast-tools/VASTDB" }
            }

            withName: combine_results {
                memory = '10 GB'
                time = '40m'
                cpus = 4
                container = 'docker://andresgordoortiz/vast-tools:latest'
                singularity.runOptions = { "--bind ${params.vastdb_path}:/usr/local/vast-tools/VASTDB" }
            }

            withName: run_rmarkdown_report {
                memory = '50 GB'
                time = '2880m'  // 48 hours
                cpus = 2
                container = 'docker://andresgordoortiz/splicing_analysis_r_crg:v1.5'
            }

            clusterOptions = {
                switch (task.time) {
                    case { it > 168.h } :
                        return '--qos=ethernal'
                    case (48<..168).h:
                        return '--qos=marathon'
                    case (24<..48).h:
                        return '--qos=vlong'
                    case (12<..24).h:
                        return '--qos=long'
                    case (6<..12).h:
                        return '--qos=normal'
                    case (3<..6).h:
                        return '--qos=short'
                    case (1<..3).h:
                        return '--qos=shorter'
                    default:
                        return '--qos=vshort'
                }
            }
        }

        singularity {
            enabled = true
            autoMounts = true
        }
    }

    local {
        process {
            executor = 'local'

            // Global resource limits for local execution
            cpus = Runtime.runtime.availableProcessors()
            memory = 10.GB

            // Process-specific settings with adjusted resources
            withName: download_reads {
                memory = '6 GB'
            }

            withName: verify_files {
                memory = '2 GB'
            }

            withName: concatenate_reads {
                memory = '6 GB'
            }

            withName: run_fastqc {
                memory = '6 GB'
                container = 'biocontainers/fastqc:v0.11.9_cv8'
            }

            withName: align_reads {
                memory = '6 GB'
                container = 'andresgordoortiz/vast-tools:latest'
                docker.runOptions = { "-v ${params.vastdb_path}:/usr/local/vast-tools/VASTDB" }
            }

            withName: combine_results {
                memory = '6 GB'
                container = 'andresgordoortiz/vast-tools:latest'
                docker.runOptions = { "-v ${params.vastdb_path}:/usr/local/vast-tools/VASTDB" }
            }

            withName: run_rmarkdown_report {
                memory = '12 GB'
                cpus = 2
                container = 'andresgordoortiz/splicing_analysis_r_crg:v1.5'
            }
        }

        docker {
            enabled = true
        }
    }
}


tower {
  accessToken = 'eyJ0aWQiOiAxMTMwNX0uMzk0MzFlNDllOWZiODJhNzFiOWI5YjhhOTUwNWJlYTkxNmI1MDUxYw=='
}